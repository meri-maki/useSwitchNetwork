{"version":3,"file":"js/211.ef432e41.js","mappings":"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","sources":["webpack://tooncoinweb/./src/helpers/helpers.js","webpack://tooncoinweb/./src/components/ui/Portal/Portal.jsx","webpack://tooncoinweb/./src/components/ui/Modal/Modal.jsx","webpack://tooncoinweb/./src/components/ui/Modal/Modal.module.scss?dead","webpack://tooncoinweb/./src/components/widgets/MintNFT/ConnectModal/ConnectModal.module.scss?afba","webpack://tooncoinweb/./public/assets/mm.svg","webpack://tooncoinweb/./public/assets/wc.svg","webpack://tooncoinweb/./src/components/widgets/MintNFT/ConnectModal/ConnectModal.jsx","webpack://tooncoinweb/./public/assets/VALUES/vote.webp","webpack://tooncoinweb/./public/assets/UI/icons/error.svg","webpack://tooncoinweb/./src/helpers/hooks/useToast.jsx","webpack://tooncoinweb/./src/components/widgets/MintNFT/ConnectButton.jsx","webpack://tooncoinweb/./src/components/widgets/MintNFT/MintSuccess/MintSuccess.module.scss?545c","webpack://tooncoinweb/./public/assets/NFT/CARDS.webp","webpack://tooncoinweb/./public/assets/NFT/diamond-blue-success.webp","webpack://tooncoinweb/./public/assets/NFT/diamond-blue-small.webp","webpack://tooncoinweb/./public/assets/NFT/diamond-purple-success.webp","webpack://tooncoinweb/./public/assets/TOKENOMIC/diamond.webp","webpack://tooncoinweb/./src/components/widgets/MintNFT/MintSuccess/MintSuccess.jsx","webpack://tooncoinweb/./src/components/widgets/MintNFT/UnsupportedBlock.jsx","webpack://tooncoinweb/./src/components/widgets/MintNFT/MintButton.jsx","webpack://tooncoinweb/./src/components/widgets/MintNFT/MintNFT.jsx","webpack://tooncoinweb/./src/components/widgets/MintNFT/MintNFT.module.scss?268b"],"sourcesContent":["/* ------------------------------- LOADED TIME ------------------------------ */\n\nexport const getTime = () => {\n\tconst loadedMonth = new Date().getMonth() + 1\n\tconst loadedDay = new Date().getDate()\n\tconst loadedHour = new Date().getHours()\n\tconst loadedMinutes = new Date().getMinutes()\n\tlet time\n\tif (loadedMonth < 10 && loadedDay < 10) {\n\t\ttime = \"0\" + loadedDay + \"/0\" + loadedMonth + \" \" + loadedHour + \":\" + loadedMinutes\n\t} else if (loadedMonth < 10 && loadedDay > 9) {\n\t\ttime = loadedDay + \"/0\" + loadedMonth + \" \" + loadedHour + \":\" + loadedMinutes\n\t} else {\n\t\ttime = loadedDay + \"/\" + loadedMonth + \" \" + loadedHour + \":\" + loadedMinutes\n\t}\n\treturn time\n}\n\nexport const preventScroll = () => (document.documentElement.style.overflow = \"hidden\")\nexport const enableScroll = () => (document.documentElement.style.overflow = \"inherit\")\n\nexport const animateOnScroll = () => {\n\tconst scrollElements = document.querySelectorAll(\".reveal\")\n\n\tlet options = {\n\t\tthreshold: 0, //0.1\n\t}\n\tconst observer = new IntersectionObserver((entries) => {\n\t\tentries.forEach((entry) => {\n\t\t\tif (entry.isIntersecting) {\n\t\t\t\tentry.target.classList.add(\"animated\")\n\t\t\t\tobserver.unobserve(entry.target)\n\t\t\t}\n\t\t})\n\t}, options)\n\n\tdocument.addEventListener(\"DOMContentLoaded\", function () {\n\t\tscrollElements.forEach((el) => observer.observe(el))\n\t})\n}\n\nexport const toElement = (ref) => {\n\tif (!ref.current) {\n\t\treturn\n\t}\n\tconst elementPosition = ref.current.getBoundingClientRect().top + window.scrollY - 100\n\n\twindow.scroll({\n\t\ttop: elementPosition,\n\t\tbehavior: \"smooth\",\n\t})\n}\n\nexport const toNFT = () => {\n\tconst NFT = document.getElementById(\"mintID\")\n\tif (!NFT) {\n\t\tconsole.error(\"Element not found.\")\n\t\treturn\n\t}\n\tconst elementPosition = NFT.getBoundingClientRect().top + window.scrollY - 100\n\twindow.scroll({\n\t\ttop: elementPosition,\n\t\tbehavior: \"smooth\",\n\t})\n}\n","import { createPortal } from \"react-dom\"\n\nexport const Portal = (props) => {\n\tconst { children, element = document.body } = props\n\treturn createPortal(children, element)\n}\n","import React, { useCallback, useEffect, useRef, useState } from \"react\"\nimport { classNames } from \"~/tools/classNames.js\"\nimport Cross from \"@/UI/icons/cross.svg\"\nimport { Portal } from \"../Portal/Portal\"\nimport cls from \"./Modal.module.scss\"\n\nconst ANIMATION_DELAY = 500\n\nexport const Modal = (props) => {\n\tconst { className, children, isOpen, onClose } = props\n\tconst [isClosing, setIsClosing] = useState(false)\n\tconst timerRef = useRef()\n\tconst closeHandler = useCallback(() => {\n\t\tif (onClose) {\n\t\t\tsetIsClosing(true)\n\t\t\ttimerRef.current = setTimeout(() => {\n\t\t\t\tonClose()\n\t\t\t\tsetIsClosing(false)\n\t\t\t}, ANIMATION_DELAY)\n\t\t}\n\t}, [onClose])\n\tconst onKeyDown = useCallback(\n\t\t(e) => {\n\t\t\tif (e.key === \"Escape\") {\n\t\t\t\tcloseHandler()\n\t\t\t}\n\t\t},\n\t\t[closeHandler]\n\t)\n\n\tuseEffect(() => {\n\t\tif (isOpen) {\n\t\t\twindow.addEventListener(\"keydown\", onKeyDown)\n\t\t}\n\n\t\treturn () => {\n\t\t\tclearTimeout(timerRef.current)\n\t\t\twindow.removeEventListener(\"keydown\", onKeyDown)\n\t\t}\n\t}, [isOpen, onKeyDown])\n\n\tconst onContentClick = (e) => {\n\t\te.stopPropagation()\n\t}\n\n\tconst mods = {\n\t\t[cls.opened]: isOpen,\n\t\t[cls.isClosing]: isClosing,\n\t}\n\n\treturn (\n\t\t<Portal>\n\t\t\t<div className={classNames(cls.Modal, mods, [className])}>\n\t\t\t\t<div className={cls.overlay} onClick={closeHandler}>\n\t\t\t\t\t<div className={cls.wrapper}>\n\t\t\t\t\t\t<img src={Cross} className={cls.cross} onClick={closeHandler} />\n\t\t\t\t\t\t<div className={cls.content} onClick={onContentClick}>\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Portal>\n\t)\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Modal\":\"Modal_PrB8u\",\"overlay\":\"overlay_tiKQa\",\"wrapper\":\"wrapper_mZUnd\",\"append-animate\":\"append-animate_yDeu5\",\"content\":\"content_UJhFK\",\"opened\":\"opened_nVT7f\",\"isClosing\":\"isClosing_yxb0f\",\"cross\":\"cross_hcMEx\"};","// extracted by mini-css-extract-plugin\nexport default {\"ConnectModal\":\"ConnectModal_aAckh\",\"cardsBlock\":\"cardsBlock_Z9oKn\"};","export default __webpack_public_path__ + \"b4e71f6375ce977be59ea6375a1b58a1.svg\";","export default __webpack_public_path__ + \"11807d8a0741d067a70df57ef02c0dd6.svg\";","/* eslint-disable react/no-unescaped-entities */\nimport React from \"react\"\nimport { useWeb3Modal } from \"@web3modal/wagmi/react\"\n\nimport Button from \"../../../ui/Button/Button\"\nimport { Modal } from \"../../../ui/Modal/Modal.jsx\"\nimport cls from \"./ConnectModal.module.scss\"\nimport MM from \"@/mm.svg\"\nimport WC from \"@/wc.svg\"\n\nimport { ampli, track } from \"../../../../helpers/amplitude\"\nimport { Links } from \"../../../../helpers/texts\"\nimport Link from \"../../../ui/Link/Link\"\n\nfunction ConnectorButton(props) {\n\tconst { open } = useWeb3Modal()\n\n\tconst { connector, onClose } = props\n\treturn (\n\t\t<>\n\t\t\t{connector == \"mm\" ? (\n\t\t\t\t<Button link href={Links.metamask} modal onClick={() => track(ampli.connectModal, { connector: \"MetaMask\" })}>\n\t\t\t\t\t<img src={MM} width=\"80\" height=\"80\" data-img />\n\t\t\t\t\t<h4>MetaMask</h4>\n\t\t\t\t\t<p>Connect to your MetaMask Wallet</p>\n\t\t\t\t\t<Link arrow>Connect</Link>\n\t\t\t\t</Button>\n\t\t\t) : (\n\t\t\t\t<Button\n\t\t\t\t\tmodal\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\ttrack(ampli.connectModal, { connector: \"WalletConnect\" })\n\t\t\t\t\t\tonClose()\n\t\t\t\t\t\topen()\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<img src={WC} width=\"80\" height=\"80\" data-img />\n\t\t\t\t\t<h4>WalletConnect</h4>\n\t\t\t\t\t<p>Use WalletConnect to connect</p>\n\t\t\t\t\t<Link arrow className={cls.link}>\n\t\t\t\t\t\tConnect\n\t\t\t\t\t</Link>\n\t\t\t\t</Button>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nconst ConnectModal = (props) => {\n\tconst { isOpen, onClose } = props\n\treturn (\n\t\t<Modal className={cls.ConnectModal} isOpen={isOpen} onClose={onClose}>\n\t\t\t<h3>Choose one</h3>\n\t\t\t<div className={cls.cardsBlock}>\n\t\t\t\t<ConnectorButton connector=\"mm\" />\n\t\t\t\t<ConnectorButton onClose={onClose} connector=\"wc\" />\n\t\t\t</div>\n\t\t</Modal>\n\t)\n}\nexport default ConnectModal\n","export default __webpack_public_path__ + \"c28fccd806f03a30bf4e27e9caca8e23.webp\";","export default __webpack_public_path__ + \"bc30d57d61d58ad0bba4440c21791ddc.svg\";","import React, { useCallback } from \"react\"\nimport { toast } from \"react-toastify\"\nimport Success from \"@/VALUES/vote.webp\"\nimport Error from \"@/UI/icons/error.svg\"\n\nimport { WALLET_SUCCESS } from \"../texts\"\n\nfunction getImage(chain) {\n\tswitch (chain.id) {\n\t\tcase 1:\n\t\t\treturn \"./assets/UI/icons/1.webp\"\n\t\tcase 56:\n\t\t\treturn \"./assets/UI/icons/56.webp\"\n\t\tcase 137:\n\t\t\treturn \"./assets/UI/icons/137.webp\"\n\t\tcase 42161:\n\t\t\treturn \"./assets/UI/icons/42161.webp\"\n\t\tdefault:\n\t\t\treturn \"./assets/UI/icons/default.webp\"\n\t}\n}\n\nexport function useToast() {\n\tconst connectSuccess = useCallback(() => {\n\t\ttoast.success(WALLET_SUCCESS, {\n\t\t\ticon: () => <img src={Success} className=\"toastIcon\" />,\n\t\t})\n\t}, [])\n\n\tconst mintError = useCallback((error) => {\n\t\ttoast.error(error, {\n\t\t\ticon: () => <img src={Error} className=\"toastIcon\" />,\n\t\t\ttoastId: \"error\",\n\t\t})\n\t}, [])\n\n\tconst chainSwitch = useCallback((chain) => {\n\t\tconst imageSrc = getImage(chain)\n\t\ttoast.success(\n\t\t\t() => (\n\t\t\t\t<>\n\t\t\t\t\tYou are successfully connected to <b>{chain.name}</b>\n\t\t\t\t</>\n\t\t\t),\n\t\t\t{\n\t\t\t\ticon: () => <img src={imageSrc} className=\"toastIcon\" />,\n\t\t\t\ttoastId: chain.name,\n\t\t\t}\n\t\t)\n\t}, [])\n\n\tconst dismissAll = () => toast.dismiss()\n\n\treturn {\n\t\tconnectSuccess,\n\t\tmintError,\n\t\tchainSwitch,\n\t\tdismissAll,\n\t}\n}\n","import { useWeb3Modal } from \"@web3modal/wagmi/react\"\nimport React, { useState, useCallback } from \"react\"\nimport Button from \"../../ui/Button/Button\"\nimport { toNFT } from \"../../../helpers/helpers\"\nimport mainconfig, { supportedChains } from \"../../../config\"\nimport ConnectModal from \"./ConnectModal/ConnectModal\"\nimport { useToast } from \"../../../helpers/hooks/useToast\"\nimport { useAccount } from \"wagmi\"\nimport { ampli, track } from \"../../../helpers/amplitude\"\n\nfunction Account({ header }) {\n\tconst { dismissAll } = useToast()\n\treturn (\n\t\t<div\n\t\t\tclassName={header ? \"disabledChild\" : \"\"}\n\t\t\tonClick={() => {\n\t\t\t\tif (header) toNFT()\n\t\t\t}}\n\t\t>\n\t\t\t<w3m-account-button\n\t\t\t\tbalance={false}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdismissAll()\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nfunction Chain() {\n\tconst { dismissAll } = useToast()\n\n\treturn <w3m-network-button onClick={() => dismissAll()} />\n}\n\nexport default function ConnectButton(props) {\n\tconst { action, connect, header, chain } = props\n\tconst { open } = useWeb3Modal()\n\tconst { isConnected } = useAccount()\n\n\tconst isMetaMask = mainconfig.isMetaMask\n\tconst isMobile = mainconfig.isMobile\n\n\tconst [connectModal, setConnectModal] = useState(false)\n\tconst onCloseModal = useCallback(() => {\n\t\tsetConnectModal(false)\n\t\ttrack(ampli.closeModal)\n\t}, [])\n\treturn (\n\t\t<>\n\t\t\t{isConnected ? (\n\t\t\t\t<>\n\t\t\t\t\t{isMetaMask && header === false && supportedChains.includes(chain.id) && <Chain />}\n\t\t\t\t\t{!isMetaMask && header === false && supportedChains.includes(chain.id) && <Chain />}\n\t\t\t\t\t<Account header={header} />\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<Button\n\t\t\t\t\t\theaderBtn={header}\n\t\t\t\t\t\tpink\n\t\t\t\t\t\tconnect={connect}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif (action) {\n\t\t\t\t\t\t\t\taction()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (isMobile && !isMetaMask) {\n\t\t\t\t\t\t\t\tsetConnectModal(true)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\topen()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tConnect Wallet\n\t\t\t\t\t\t<div className=\"sh\"></div>\n\t\t\t\t\t</Button>\n\t\t\t\t\t{connectModal && <ConnectModal isOpen={connectModal} onClose={onCloseModal} />}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t)\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"MintSuccess\":\"MintSuccess_jyNLr\",\"imagesBlock\":\"imagesBlock_ZejTZ\",\"card\":\"card_cCYMR\",\"desk\":\"desk_JNXEw\",\"purple\":\"purple_ldA5G\",\"blue\":\"blue_oIReb\",\"small\":\"small_IGcKz\"};","export default __webpack_public_path__ + \"7cc8666e0f5e0b64c953b42c3a1b284d.webp\";","export default __webpack_public_path__ + \"fc1ea6cc1bd27e7e3b1babdd24b66f19.webp\";","export default __webpack_public_path__ + \"a65305de9ebb7e931838c461d30c8572.webp\";","export default __webpack_public_path__ + \"8ff9fa8ace06a3e39f946643dbb00eaa.webp\";","export default __webpack_public_path__ + \"5bd2b4ffa02a554acd9e88bf8ed7c4d3.webp\";","/* eslint-disable react/no-unescaped-entities */\nimport React from \"react\"\nimport Button from \"../../../ui/Button/Button\"\nimport { Modal } from \"../../../ui/Modal/Modal.jsx\"\nimport cls from \"./MintSuccess.module.scss\"\nimport Card from \"@/NFT/CARDS.webp\"\nimport Blue from \"@/NFT/diamond-blue-success.webp\"\nimport Small from \"@/NFT/diamond-blue-small.webp\"\nimport Desk from \"@/NFT/diamond-purple-success.webp\"\n\nimport Purple from \"@/TOKENOMIC/diamond.webp\"\nimport { ampli, track } from \"../../../../helpers/amplitude\"\nimport { Links } from \"../../../../helpers/texts\"\n\nconst MintSuccess = (props) => {\n\tconst { isOpen, onClose } = props\n\treturn (\n\t\t<Modal className={cls.MintSuccess} isOpen={isOpen} onClose={onClose}>\n\t\t\t<h3>\n\t\t\t\tCongratulations!\n\t\t\t\t<br /> You're In!\n\t\t\t</h3>\n\t\t\t<div className={cls.imagesBlock}>\n\t\t\t\t<img alt=\"icon\" src={Blue} width=\"35\" height=\"auto\" className={cls.blue} data-absolute />\n\t\t\t\t<img alt=\"icon\" src={Purple} width=\"39\" height=\"auto\" className={cls.purple} data-absolute />\n\t\t\t\t<img alt=\"icon\" src={Desk} width=\"40\" height=\"auto\" className={cls.desk} data-absolute />\n\n\t\t\t\t<img alt=\"icon\" src={Card} className={cls.card} width=\"320\" height=\"auto\" />\n\t\t\t\t<img alt=\"icon\" src={Small} width=\"21\" height=\"auto\" className={cls.small} data-absolute />\n\t\t\t</div>\n\t\t\t<h5>\n\t\t\t\tYou've just secured your <b>ToON Pass</b>, marking you as an early member of our digital frontier. Dive into our exclusive community created just for early adopters like you.\n\t\t\t</h5>\n\t\t\t<Button link href={Links.discord} onClick={() => track(ampli.discordCom)}>\n\t\t\t\tJoin the Exclusive Circle Now\n\t\t\t</Button>\n\t\t</Modal>\n\t)\n}\nexport default MintSuccess\n","import { useWeb3Modal } from \"@web3modal/wagmi/react\"\nimport { useToast } from \"../../../helpers/hooks/useToast\"\nimport Button from \"../../ui/Button/Button\"\nimport React from \"react\"\n\nconst UnsupportedBlock = () => {\n\tconst { open } = useWeb3Modal()\n\tconst { dismissAll } = useToast()\n\treturn (\n\t\t<>\n\t\t\t<h6>\n\t\t\t\tOur NFTs are <b>not yet available on this blockchain</b>. Please switch your wallet to one of the <b>supported chains</b>.\n\t\t\t</h6>\n\t\t\t<Button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdismissAll()\n\t\t\t\t\topen({ view: \"Networks\" })\n\t\t\t\t}}\n\t\t\t\tmint\n\t\t\t>\n\t\t\t\t<div className=\"sh\"></div>\n\t\t\t\tSwitch Chain\n\t\t\t</Button>\n\t\t</>\n\t)\n}\n\nexport default UnsupportedBlock\n","import { ampli, track } from \"~/helpers/amplitude\"\nimport React from \"react\"\n\nimport { supportedChains } from \"../../../config\"\nimport Button from \"../../ui/Button/Button\"\nimport UnsupportedBlock from \"./UnsupportedBlock\"\n\nconst MintButton = (props) => {\n\tconst { isLoading, write, chain } = props\n\n\treturn (\n\t\t<>\n\t\t\t{!supportedChains.includes(chain.id) /* && !isMetaMask  */ ? (\n\t\t\t\t<UnsupportedBlock chain={chain} />\n\t\t\t) : (\n\t\t\t\t<Button\n\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\ttrack(ampli.mintNFT)\n\t\t\t\t\t\twrite()\n\t\t\t\t\t\tconsole.log(\"write\")\n\t\t\t\t\t}}\n\t\t\t\t\tmint\n\t\t\t\t>\n\t\t\t\t\t<div className=\"sh\"></div>\n\t\t\t\t\t{isLoading ? \"Minting...\" : \"Mint ToON Pass\"}\n\t\t\t\t</Button>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default MintButton\n","/* eslint-disable react/no-unescaped-entities */\nimport React, { useCallback, useEffect, useState } from \"react\"\n\nimport \"./toast.scss\"\n\nimport \"react-toastify/dist/ReactToastify.css\"\nimport { useAccount, useBalance, useConnect, useNetwork } from \"wagmi\"\nimport cls from \"./MintNFT.module.scss\"\n\nimport { usePrepareContractWrite, useContractWrite, useWaitForTransaction } from \"wagmi\"\nimport ConnectButton from \"./ConnectButton\"\nimport MintSuccess from \"./MintSuccess/MintSuccess\"\nimport { PURCHASE_ERRORS } from \"../../../helpers/texts\"\nimport { ampli, track } from \"~/helpers/amplitude\"\nimport mainconfig, { supportedChains } from \"../../../config\"\nimport { InjectedConnector } from \"wagmi/connectors/injected\"\nimport { useToast } from \"../../../helpers/hooks/useToast\"\nimport MintButton from \"./MintButton\"\n\nconst NFTcontracts = {\n\tSepolia: \"0x42Fbf87Cd983c0F0BCdfF2d8A5904CD4968cD76F\",\n\tEthereum: \"0x49cC7de889C1e4bDc1b4156B882cA5c76C668987\",\n\tPolygon: \"0xA42ccA468fd07491824Ab121CB559f1B3791e92C\",\n\t\"Arbitrum One\": \"0x6f2C97dB74D4d3E8A31e628325A39bbef928dd59\",\n\t\"BNB Smart Chain\": \"0xFA17c9e4f5Ec1A62d032731fE0a9529D7B851BE6\",\n}\n\nconst MintNFT = (props) => {\n\tconst { className } = props\n\tconst [initialChain, setInitialChain] = useState()\n\tconst isMobile = mainconfig.isMobile\n\tconst isMetaMask = mainconfig.isMetaMask\n\tconst { dismissAll, mintError, chainSwitch, connectSuccess } = useToast()\n\n\tconst { connect } = useConnect({\n\t\tconnector: new InjectedConnector(),\n\t\tonError(error) {\n\t\t\tconsole.log(\"Error\", error)\n\t\t\ttrack(ampli.walletError, { error: error.message })\n\t\t},\n\t})\n\tconst { isConnected, address } = useAccount({\n\t\tonConnect({ address, connector, isReconnected }) {\n\t\t\tconnectSuccess()\n\t\t\ttrack(ampli.walletSuccess, { account: address, connector: connector.name, isReconnected: isReconnected, chain: chain.name })\n\t\t\tsetInitialChain(chain.name)\n\t\t\trefetch()\n\t\t},\n\t\tonDisconnect() {\n\t\t\tdismissAll()\n\t\t},\n\t})\n\tuseEffect(() => {\n\t\tif (isConnected) {\n\t\t\treturn\n\t\t} else if (isMobile && isMetaMask) {\n\t\t\tconnect()\n\t\t}\n\t\treturn\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\n\tconst [isSuccessModal, setIsSuccessModal] = useState(false)\n\tconst { chain } = useNetwork()\n\tuseEffect(() => {\n\t\tif (!isConnected) {\n\t\t\tdismissAll()\n\t\t}\n\t\treturn\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [isConnected])\n\n\tuseBalance({\n\t\taddress: address,\n\t\tonSuccess(data) {\n\t\t\ttrack(ampli.walletSuccessBalance, { balance: `${data.formatted} ${data.symbol}`, currency: data.symbol })\n\t\t},\n\t})\n\n\tconst { refetch, config } = usePrepareContractWrite({\n\t\taddress: isConnected ? NFTcontracts[chain.name] : \"0x0\",\n\t\tabi: [\n\t\t\t{\n\t\t\t\tname: \"mint\",\n\t\t\t\ttype: \"function\",\n\t\t\t\tstateMutability: \"payable\",\n\t\t\t\tinputs: [{ internalType: \"uint256\", name: \"_mintAmount\", type: \"uint256\" }],\n\t\t\t\toutputs: [],\n\t\t\t},\n\t\t],\n\t\targs: [\"1\"],\n\t\tfunctionName: \"mint\",\n\t})\n\n\tconst { error, isError, write, data } = useContractWrite(config)\n\n\tconst {\n\t\tisLoading,\n\t\tisSuccess,\n\t\terror: transError,\n\t\tisError: isTransError,\n\t} = useWaitForTransaction({\n\t\thash: data?.hash,\n\t\tonSuccess(data) {\n\t\t\tconsole.log(\"SuccessTrans\", data)\n\t\t\ttrack(ampli.mintSuccess, { blockHash: data.blockHash, transHash: data.transactionHash, NFTcontract: data.to })\n\t\t\tonOpenModal()\n\t\t},\n\t\tonError(error) {\n\t\t\ttrack(ampli.mintError, { error: error.message })\n\t\t},\n\t})\n\tuseEffect(() => {\n\t\tif (isConnected && chain) {\n\t\t\tif (supportedChains.includes(chain.id)) {\n\t\t\t\ttrack(ampli.chain, { chain: chain })\n\t\t\t\tchainSwitch(chain)\n\t\t\t\trefetch()\n\t\t\t} else {\n\t\t\t\tconsole.log(chain.name)\n\t\t\t\tconsole.log(\"unsupported\")\n\t\t\t}\n\t\t}\n\t\treturn\n\t}, [chain, chainSwitch, initialChain, isConnected, refetch])\n\n\tconst onCloseModal = useCallback(() => {\n\t\tsetIsSuccessModal(false)\n\t}, [])\n\n\tconst onOpenModal = useCallback(() => {\n\t\tdismissAll()\n\t\tsetIsSuccessModal(true)\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (isError || isTransError) {\n\t\t\tif (\n\t\t\t\t(error || transError)?.message.includes(\"cancelled\") ||\n\t\t\t\t(error || transError)?.message.includes(\"canceled\") ||\n\t\t\t\t(error || transError)?.message.includes(\"rejected\") ||\n\t\t\t\terror?.code === 4001\n\t\t\t) {\n\t\t\t\tmintError(PURCHASE_ERRORS[4001])\n\t\t\t\ttrack(ampli.mintError, { error: (error || transError)?.message, type: \"cancelled\" })\n\t\t\t} else if ((error || transError)?.message.includes(\"funds\") || error?.code === -3200) {\n\t\t\t\tmintError(PURCHASE_ERRORS[3200])\n\t\t\t\ttrack(ampli.mintError, { error: (error || transError)?.message, type: \"insufficient funds\" })\n\t\t\t} else if ((error || transError)?.message) {\n\t\t\t\tmintError(PURCHASE_ERRORS.general)\n\t\t\t\ttrack(ampli.mintError, { error: (error || transError)?.message, type: \"other\" })\n\t\t\t}\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [error, isError, isTransError, transError])\n\n\treturn (\n\t\t<div className={`${className ? className : \"\"} ${cls.MintNFT} `}>\n\t\t\t<div className={`${cls.buttonsBlock} ${isLoading ? \"disabled\" : \"\"}`}>\n\t\t\t\t<div className={isConnected ? cls.connected : cls.disconnected} id=\"mintID\">\n\t\t\t\t\t<ConnectButton\n\t\t\t\t\t\tchain={chain}\n\t\t\t\t\t\tconnect\n\t\t\t\t\t\theader={false}\n\t\t\t\t\t\taction={() => {\n\t\t\t\t\t\t\ttrack(ampli.walletMint)\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{isConnected && <MintButton isLoading={isLoading} write={write} chain={chain} />}\n\t\t\t</div>\n\n\t\t\t{isConnected && <>{isSuccessModal && <MintSuccess isOpen={isSuccessModal} onClose={onCloseModal} />}</>}\n\t\t</div>\n\t)\n}\n\nexport default MintNFT\n","// extracted by mini-css-extract-plugin\nexport default {\"MintNFT\":\"MintNFT_ZB5Uw\",\"buttonsBlock\":\"buttonsBlock_v7Vo_\",\"NFTdetect\":\"NFTdetect_JzFOG\",\"discordButton\":\"discordButton_G7xT9\",\"arrow\":\"arrow_Tuwoo\",\"disconnected\":\"disconnected_GvvnD\",\"connected\":\"connected_pjFXv\"};"],"names":["toNFT","NFT","document","getElementById","console","error","elementPosition","getBoundingClientRect","top","window","scrollY","scroll","behavior","Portal","props","children","element","body","createPortal","Modal","className","isOpen","onClose","isClosing","setIsClosing","useState","timerRef","useRef","closeHandler","useCallback","current","setTimeout","onKeyDown","e","key","useEffect","addEventListener","clearTimeout","removeEventListener","mods","React","classNames","onClick","src","Cross","stopPropagation","ConnectorButton","open","useWeb3Modal","connector","Button","link","href","Links","metamask","modal","track","ampli","connectModal","MM","width","height","Link","arrow","WC","cls","ConnectModal","cardsBlock","useToast","connectSuccess","toast","success","WALLET_SUCCESS","icon","Success","mintError","Error","toastId","chainSwitch","chain","imageSrc","id","getImage","name","dismissAll","dismiss","Account","_ref","header","balance","Chain","ConnectButton","action","connect","isConnected","useAccount","isMetaMask","mainconfig","isMobile","setConnectModal","onCloseModal","closeModal","supportedChains","includes","headerBtn","pink","alt","Blue","Purple","Desk","Card","Small","discord","discordCom","UnsupportedBlock","view","mint","isLoading","write","disabled","mintNFT","log","NFTcontracts","Sepolia","Ethereum","Polygon","initialChain","setInitialChain","useConnect","InjectedConnector","onError","walletError","message","address","onConnect","isReconnected","walletSuccess","account","refetch","onDisconnect","isSuccessModal","setIsSuccessModal","useNetwork","useBalance","onSuccess","data","walletSuccessBalance","concat","formatted","symbol","currency","config","usePrepareContractWrite","abi","type","stateMutability","inputs","internalType","outputs","args","functionName","isError","useContractWrite","isSuccess","transError","isTransError","useWaitForTransaction","hash","mintSuccess","blockHash","transHash","transactionHash","NFTcontract","to","onOpenModal","_ref2","_ref3","_ref4","_ref6","_ref8","_ref5","code","PURCHASE_ERRORS","_ref7","_ref9","general","walletMint","MintButton","MintSuccess"],"sourceRoot":""}